import numpy as np

data = np.loadtxt("sensor_data/sensor_readings.csv", delimiter=",", skiprows=1)

time = data[:, 0]
temperature = data[:, 1]
distance = data[:, 2]
battery = data[:, 3]
avg_temp, min_temp, max_temp = np.mean(temperature), np.min(temperature), np.max(temperature)
avg_dist, min_dist, max_dist = np.mean(distance), np.min(distance), np.max(distance)
avg_batt, min_batt, max_batt = np.mean(battery), np.min(battery), np.max(battery)

time_highest_temp = time[np.argmax(temperature)]

low_battery_count = np.sum(battery < 30)
with open("sensor_data/processed_results.txt", "w") as f:
    f.write("Sensor Data Analysis Results\n")
    f.write(f"Temperature -> Avg: {avg_temp:.2f}, Min: {min_temp}, Max: {max_temp}\n")
    f.write(f"Distance -> Avg: {avg_dist:.2f}, Min: {min_dist}, Max: {max_dist}\n")
    f.write(f"Battery -> Avg: {avg_batt:.2f}, Min: {min_batt}, Max: {max_batt}\n")
    f.write(f"Time of highest temperature: {time_highest_temp}\n")
    f.write(f"Battery below 30% count: {low_battery_count}\n")

#ques 2
import numpy as np
path = np.loadtxt("robot_path/robot_positions.csv", delimiter=",", skiprows=1)

x = path[:, 0]
y = path[:, 1]
diffs = np.diff(path, axis=0)
distances = np.sqrt(np.sum(diffs**2, axis=1))
total_distance = np.sum(distances)

dist_from_origin = np.sqrt(x**2 + y**2)
farthest_point = path[np.argmax(dist_from_origin)]
unique_positions = np.unique(path, axis=0)
revisited = len(unique_positions) < len(path)
with open("robot_path/processed_results.txt", "w") as f:
    f.write("Robot Path Analysis Results\n")
    f.write(f"Total distance traveled: {total_distance:.2f}\n")
    f.write(f"Farthest point from origin: {farthest_point}\n")
    f.write(f"Revisited a position: {'Yes' if revisited else 'No'}\n")
